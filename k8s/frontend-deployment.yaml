---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
  namespace: librescript
data:
  PUBLIC_API_URL: "http://backend-api:80/api"
  NODE_ENV: "production"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-web
  namespace: librescript
  labels:
    app: frontend-web
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-web
  template:
    metadata:
      labels:
        app: frontend-web
    spec:
      containers:
      - name: frontend-web
        image: librescript/frontend-web:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
        env:
        - name: PUBLIC_API_URL
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: PUBLIC_API_URL
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: NODE_ENV
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 5
          failureThreshold: 3
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-web
  namespace: librescript
  labels:
    app: frontend-web
spec:
  selector:
    app: frontend-web
  ports:
  - port: 3000
    targetPort: 3000
    protocol: TCP
    name: http
  type: ClusterIP 